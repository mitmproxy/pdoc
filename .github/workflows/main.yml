name: continuous integration

on: [ push, pull_request ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version-file: .github/python-version.txt
      - name: Install tox from PyPI
        uses: install-pinned/tox@1bef451c18dcd629082d73fd4d7f57fdaa64ccf5  # 4.0.18
      - run: tox -e lint
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            py: 3.11.0
            args: --cov-fail-under=100
          - os: macos-latest
            py: 3.11.0
            args: --cov-fail-under=100
          - os: ubuntu-latest
            py: 3.11.0
            args: --cov-fail-under=100
          - os: ubuntu-latest
            py: 3.10.8
          - os: ubuntu-latest
            py: 3.9.15
          - os: ubuntu-latest
            py: 3.8.14
          - os: ubuntu-latest
            py: 3.7.15
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
      - name: Install tox from PyPI
        uses: install-pinned/tox@1bef451c18dcd629082d73fd4d7f57fdaa64ccf5  # 4.0.18
      - run: tox -e py -- -vvv ${{ matrix.args }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version-file: .github/python-version.txt
      - name: Install build from PyPI
        uses: install-pinned/build@80d41abb0995d6d957a562f30fc70c39fca61b6f  # 0.9.0
      - name: Install setuptools from PyPI
        uses: install-pinned/setuptools@a3794bc223f37de1a371a34b64836a8c0c4f3167  # 65.6.3
      - name: Install wheel from PyPI
        uses: install-pinned/wheel@898673260e6f8eb95e3602c6a08907ca13670387  # 0.38.4

      - run: sudo unshare --net -- $(which python) -m build --no-isolation
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    environment: deploy
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      TWINE_REPOSITORY: ${{ secrets.TWINE_REPOSITORY }}
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y twine
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - run: twine check dist/*
      - run: twine upload dist/*

  check:
    if: always()
    runs-on: ubuntu-latest
    needs:
    - lint
    - test
    - build
    steps:
    - uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe  # v1.2.2
      with:
        jobs: ${{ toJSON(needs) }}
