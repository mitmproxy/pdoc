name: CI

on: [ push, pull_request ]

permissions:
  contents: read

jobs:
  lint-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: TrueBrain/actions-flake8@9a43ff1b2c7b96f3edffc48a49973ce3de116ba1
  lint-local:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - run: pip install tox
      - run: tox -e flake8
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - run: pip install tox
      - run: tox -e mypy
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            py: 3.9.5
          - os: macos-latest
            py: 3.9.5
          - os: ubuntu-latest
            py: 3.9.5
          - os: ubuntu-latest
            py: 3.8.10
          - os: ubuntu-latest
            py: 3.7.10
    runs-on: ${{ matrix.os }}
    steps:
      - run: printenv
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - run: pip install tox
      - run: tox -e py -- -vvv
      - uses: codecov/codecov-action@a1ed4b322b4b38cb846afb5a0ebfa17086917d27
        with:
          file: ./coverage.xml
          name: ${{ matrix.os }}

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    environment: deploy
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      TWINE_REPOSITORY: ${{ secrets.TWINE_REPOSITORY }}
    runs-on: ubuntu-latest
    needs: [mypy, test]
    steps:
      - run: printenv
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - run: sudo apt install twine python-wheel
      - run: python setup.py bdist_wheel
      - run: twine check dist/*
      - run: twine upload dist/*
