<module demopackage  # A test package with …
    <class demopackage.Test  # inherited from demopackage._child_d.Test, The Test class from …
        <method def __init__(): ...  # inherited from demopackage._child_d.Test.__init__>
        <method def foo(self, a: int): ...  # inherited from demopackage._child_d.Test.foo, Do foo.>
    >
    <class demopackage.B  # inherited from demopackage.child_b.B, This class is define…
        <method def __init__(): ...  # inherited from demopackage.child_b.B.__init__>
        <var b_type: Type[demopackage.child_b.B]  # inherited from demopackage.child_b.B.b_type, we have a self-refer…>
        <method def b(self): ...  # inherited from demopackage.child_b.B.b>
    >
    <class demopackage.C  # inherited from demopackage.child_c.C, This class is define…
        <method def __init__(): ...  # inherited from demopackage.child_c.C.__init__>
        <method def c(self): ...  # inherited from demopackage.child_c.C.c>
        <var b_type: Type[demopackage.child_b.B]  # inherited from demopackage.child_b.B.b_type, we have a self-refer…>
        <method def b(self): ...  # inherited from demopackage.child_b.B.b>
    >
    <class demopackage.F  # inherited from demopackage.child_f.F, This class is define…
        <method def __init__(): ...  # inherited from demopackage.child_f.F.__init__>
        <method def g(self) -> demopackage.subpackage.child_g.G: ...  # inherited from demopackage.child_f.F.g>
    >
>