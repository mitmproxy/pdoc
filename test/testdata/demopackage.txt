<module demopackage  # A test package
    <class demopackage.Test  # inherited from demopackage._child_d.Test, The Test class from …
        <method def __init__(): ...  # inherited from demopackage._child_d.Test.__init__>
        <method def foo(self, a: int): ...  # inherited from demopackage._child_d.Test.foo, Do foo.>>
    <module demopackage.child_b  # child_b docstr>
    <module demopackage.child_c  # child_c docstr>
    <module misc
        <class misc.Child
            <method def __init__(self): ...  # init>
            <method def foo(self): ...  # foo>
            <@classmethod class def bar(cls): ...  # bar>
            <@staticmethod static def baz(): ...  # baz>
            <var qux  # qux>
            <var quux>
            <var quuux: int = 42  # quuux>>
        <method def bad_qualname(self, a: int, b: Literal['w', 'r'], c: bool = True) -> None: ...  # inherited from demo_long.bad_qualname>
        <var only_annotated: int>
        <class misc.CustomException  # custom exception typ…
            <method def __init__(self, /, *args, **kwargs): ...  # inherited from builtins.RuntimeError.__init__>
            <method def with_traceback(unknown): ...  # inherited from builtins.BaseException.with_traceback, Exception.with_trace…>
            <var args = <attribute 'args' of 'BaseException' objects>  # inherited from builtins.BaseException.args>>
        <class misc.LambdaAttr
            <method def __init__(): ...>
            <method def attr(x): ...>>
        <function def foo(): ...  # no indents>
        <function def bar(): ...  # no
        indents>
        <function def baz(): ...  # one
        indent>
        <function def qux(): ...  # two
        indents>
        <class misc.Indented
            <method def __init__(): ...>
            <method def foo(self): ...  # no indents>
            <method def bar(self): ...  # no
            indents>
            <method def baz(self): ...  # one
            indent>
            <method def qux(self): ...  # two
            indents>
            <@lru_cache method def foo_decorated(self): ...  # no indents>
            <@lru_cache method def foo_commented(self): ...  # no indents>
            <@lru_cache method def bar_decorated(self): ...  # no
            indents>
            <@lru_cache method def baz_decorated(self): ...  # one
            indent>
            <@lru_cache method def qux_decorated(self): ...  # two
            indents>>>>